{"version":3,"sources":["scripts/scrollReveal.js","../node_modules/vanilla-tilt/lib/vanilla-tilt.js","scripts/tiltAnimation.js","data/scrollRevealConfig.js","index.js"],"names":["initScrollReveal","targetElements","defaultProps","length","ScrollReveal","reset","forEach","_ref","element","animation","reveal","Object","assign","_vanillaTilt","_interopRequireDefault","require","e","__esModule","default","initTiltAnimation","elements","document","querySelectorAll","VanillaTilt","init","exports","easing","distance","duration","desktop","mobile","delay","origin","window","innerWidth","_scrollReveal","_tiltAnimation","_scrollRevealConfig","initTiltEffect"],"mappings":"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","file":"src.c07d7e8d.js","sourceRoot":"..\\..\\src","sourcesContent":["export default function initScrollReveal(targetElements, defaultProps) {\r\n  if (!targetElements.length) return;\r\n\r\n  ScrollReveal({ reset: false });\r\n\r\n  targetElements.forEach(({ element, animation }) => {\r\n    ScrollReveal().reveal(element, Object.assign({}, defaultProps, animation));\r\n  });\r\n}\r\n","'use strict';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/**\r\n * Created by Sergiu È˜andor (micku7zu) on 1/27/2017.\r\n * Original idea: https://github.com/gijsroge/tilt.js\r\n * MIT License.\r\n * Version 1.8.1\r\n */\n\nvar VanillaTilt = function () {\n  function VanillaTilt(element) {\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VanillaTilt);\n\n    if (!(element instanceof Node)) {\n      throw \"Can't initialize VanillaTilt because \" + element + \" is not a Node.\";\n    }\n\n    this.width = null;\n    this.height = null;\n    this.clientWidth = null;\n    this.clientHeight = null;\n    this.left = null;\n    this.top = null;\n\n    // for Gyroscope sampling\n    this.gammazero = null;\n    this.betazero = null;\n    this.lastgammazero = null;\n    this.lastbetazero = null;\n\n    this.transitionTimeout = null;\n    this.updateCall = null;\n    this.event = null;\n\n    this.updateBind = this.update.bind(this);\n    this.resetBind = this.reset.bind(this);\n\n    this.element = element;\n    this.settings = this.extendSettings(settings);\n\n    this.reverse = this.settings.reverse ? -1 : 1;\n    this.resetToStart = VanillaTilt.isSettingTrue(this.settings[\"reset-to-start\"]);\n    this.glare = VanillaTilt.isSettingTrue(this.settings.glare);\n    this.glarePrerender = VanillaTilt.isSettingTrue(this.settings[\"glare-prerender\"]);\n    this.fullPageListening = VanillaTilt.isSettingTrue(this.settings[\"full-page-listening\"]);\n    this.gyroscope = VanillaTilt.isSettingTrue(this.settings.gyroscope);\n    this.gyroscopeSamples = this.settings.gyroscopeSamples;\n\n    this.elementListener = this.getElementListener();\n\n    if (this.glare) {\n      this.prepareGlare();\n    }\n\n    if (this.fullPageListening) {\n      this.updateClientSize();\n    }\n\n    this.addEventListeners();\n    this.reset();\n\n    if (this.resetToStart === false) {\n      this.settings.startX = 0;\n      this.settings.startY = 0;\n    }\n  }\n\n  VanillaTilt.isSettingTrue = function isSettingTrue(setting) {\n    return setting === \"\" || setting === true || setting === 1;\n  };\n\n  /**\r\n   * Method returns element what will be listen mouse events\r\n   * @return {Node}\r\n   */\n\n\n  VanillaTilt.prototype.getElementListener = function getElementListener() {\n    if (this.fullPageListening) {\n      return window.document;\n    }\n\n    if (typeof this.settings[\"mouse-event-element\"] === \"string\") {\n      var mouseEventElement = document.querySelector(this.settings[\"mouse-event-element\"]);\n\n      if (mouseEventElement) {\n        return mouseEventElement;\n      }\n    }\n\n    if (this.settings[\"mouse-event-element\"] instanceof Node) {\n      return this.settings[\"mouse-event-element\"];\n    }\n\n    return this.element;\n  };\n\n  /**\r\n   * Method set listen methods for this.elementListener\r\n   * @return {Node}\r\n   */\n\n\n  VanillaTilt.prototype.addEventListeners = function addEventListeners() {\n    this.onMouseEnterBind = this.onMouseEnter.bind(this);\n    this.onMouseMoveBind = this.onMouseMove.bind(this);\n    this.onMouseLeaveBind = this.onMouseLeave.bind(this);\n    this.onWindowResizeBind = this.onWindowResize.bind(this);\n    this.onDeviceOrientationBind = this.onDeviceOrientation.bind(this);\n\n    this.elementListener.addEventListener(\"mouseenter\", this.onMouseEnterBind);\n    this.elementListener.addEventListener(\"mouseleave\", this.onMouseLeaveBind);\n    this.elementListener.addEventListener(\"mousemove\", this.onMouseMoveBind);\n\n    if (this.glare || this.fullPageListening) {\n      window.addEventListener(\"resize\", this.onWindowResizeBind);\n    }\n\n    if (this.gyroscope) {\n      window.addEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n    }\n  };\n\n  /**\r\n   * Method remove event listeners from current this.elementListener\r\n   */\n\n\n  VanillaTilt.prototype.removeEventListeners = function removeEventListeners() {\n    this.elementListener.removeEventListener(\"mouseenter\", this.onMouseEnterBind);\n    this.elementListener.removeEventListener(\"mouseleave\", this.onMouseLeaveBind);\n    this.elementListener.removeEventListener(\"mousemove\", this.onMouseMoveBind);\n\n    if (this.gyroscope) {\n      window.removeEventListener(\"deviceorientation\", this.onDeviceOrientationBind);\n    }\n\n    if (this.glare || this.fullPageListening) {\n      window.removeEventListener(\"resize\", this.onWindowResizeBind);\n    }\n  };\n\n  VanillaTilt.prototype.destroy = function destroy() {\n    clearTimeout(this.transitionTimeout);\n    if (this.updateCall !== null) {\n      cancelAnimationFrame(this.updateCall);\n    }\n\n    this.element.style.willChange = \"\";\n    this.element.style.transition = \"\";\n    this.element.style.transform = \"\";\n    this.resetGlare();\n\n    this.removeEventListeners();\n    this.element.vanillaTilt = null;\n    delete this.element.vanillaTilt;\n\n    this.element = null;\n  };\n\n  VanillaTilt.prototype.onDeviceOrientation = function onDeviceOrientation(event) {\n    if (event.gamma === null || event.beta === null) {\n      return;\n    }\n\n    this.updateElementPosition();\n\n    if (this.gyroscopeSamples > 0) {\n      this.lastgammazero = this.gammazero;\n      this.lastbetazero = this.betazero;\n\n      if (this.gammazero === null) {\n        this.gammazero = event.gamma;\n        this.betazero = event.beta;\n      } else {\n        this.gammazero = (event.gamma + this.lastgammazero) / 2;\n        this.betazero = (event.beta + this.lastbetazero) / 2;\n      }\n\n      this.gyroscopeSamples -= 1;\n    }\n\n    var totalAngleX = this.settings.gyroscopeMaxAngleX - this.settings.gyroscopeMinAngleX;\n    var totalAngleY = this.settings.gyroscopeMaxAngleY - this.settings.gyroscopeMinAngleY;\n\n    var degreesPerPixelX = totalAngleX / this.width;\n    var degreesPerPixelY = totalAngleY / this.height;\n\n    var angleX = event.gamma - (this.settings.gyroscopeMinAngleX + this.gammazero);\n    var angleY = event.beta - (this.settings.gyroscopeMinAngleY + this.betazero);\n\n    var posX = angleX / degreesPerPixelX;\n    var posY = angleY / degreesPerPixelY;\n\n    if (this.updateCall !== null) {\n      cancelAnimationFrame(this.updateCall);\n    }\n\n    this.event = {\n      clientX: posX + this.left,\n      clientY: posY + this.top\n    };\n\n    this.updateCall = requestAnimationFrame(this.updateBind);\n  };\n\n  VanillaTilt.prototype.onMouseEnter = function onMouseEnter() {\n    this.updateElementPosition();\n    this.element.style.willChange = \"transform\";\n    this.setTransition();\n  };\n\n  VanillaTilt.prototype.onMouseMove = function onMouseMove(event) {\n    if (this.updateCall !== null) {\n      cancelAnimationFrame(this.updateCall);\n    }\n\n    this.event = event;\n    this.updateCall = requestAnimationFrame(this.updateBind);\n  };\n\n  VanillaTilt.prototype.onMouseLeave = function onMouseLeave() {\n    this.setTransition();\n\n    if (this.settings.reset) {\n      requestAnimationFrame(this.resetBind);\n    }\n  };\n\n  VanillaTilt.prototype.reset = function reset() {\n    this.onMouseEnter();\n\n    if (this.fullPageListening) {\n      this.event = {\n        clientX: (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.clientWidth,\n        clientY: (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.clientHeight\n      };\n    } else {\n      this.event = {\n        clientX: this.left + (this.settings.startX + this.settings.max) / (2 * this.settings.max) * this.width,\n        clientY: this.top + (this.settings.startY + this.settings.max) / (2 * this.settings.max) * this.height\n      };\n    }\n\n    var backupScale = this.settings.scale;\n    this.settings.scale = 1;\n    this.update();\n    this.settings.scale = backupScale;\n    this.resetGlare();\n  };\n\n  VanillaTilt.prototype.resetGlare = function resetGlare() {\n    if (this.glare) {\n      this.glareElement.style.transform = \"rotate(180deg) translate(-50%, -50%)\";\n      this.glareElement.style.opacity = \"0\";\n    }\n  };\n\n  VanillaTilt.prototype.getValues = function getValues() {\n    var x = void 0,\n        y = void 0;\n\n    if (this.fullPageListening) {\n      x = this.event.clientX / this.clientWidth;\n      y = this.event.clientY / this.clientHeight;\n    } else {\n      x = (this.event.clientX - this.left) / this.width;\n      y = (this.event.clientY - this.top) / this.height;\n    }\n\n    x = Math.min(Math.max(x, 0), 1);\n    y = Math.min(Math.max(y, 0), 1);\n\n    var tiltX = (this.reverse * (this.settings.max - x * this.settings.max * 2)).toFixed(2);\n    var tiltY = (this.reverse * (y * this.settings.max * 2 - this.settings.max)).toFixed(2);\n    var angle = Math.atan2(this.event.clientX - (this.left + this.width / 2), -(this.event.clientY - (this.top + this.height / 2))) * (180 / Math.PI);\n\n    return {\n      tiltX: tiltX,\n      tiltY: tiltY,\n      percentageX: x * 100,\n      percentageY: y * 100,\n      angle: angle\n    };\n  };\n\n  VanillaTilt.prototype.updateElementPosition = function updateElementPosition() {\n    var rect = this.element.getBoundingClientRect();\n\n    this.width = this.element.offsetWidth;\n    this.height = this.element.offsetHeight;\n    this.left = rect.left;\n    this.top = rect.top;\n  };\n\n  VanillaTilt.prototype.update = function update() {\n    var values = this.getValues();\n\n    this.element.style.transform = \"perspective(\" + this.settings.perspective + \"px) \" + \"rotateX(\" + (this.settings.axis === \"x\" ? 0 : values.tiltY) + \"deg) \" + \"rotateY(\" + (this.settings.axis === \"y\" ? 0 : values.tiltX) + \"deg) \" + \"scale3d(\" + this.settings.scale + \", \" + this.settings.scale + \", \" + this.settings.scale + \")\";\n\n    if (this.glare) {\n      this.glareElement.style.transform = \"rotate(\" + values.angle + \"deg) translate(-50%, -50%)\";\n      this.glareElement.style.opacity = \"\" + values.percentageY * this.settings[\"max-glare\"] / 100;\n    }\n\n    this.element.dispatchEvent(new CustomEvent(\"tiltChange\", {\n      \"detail\": values\n    }));\n\n    this.updateCall = null;\n  };\n\n  /**\r\n   * Appends the glare element (if glarePrerender equals false)\r\n   * and sets the default style\r\n   */\n\n\n  VanillaTilt.prototype.prepareGlare = function prepareGlare() {\n    // If option pre-render is enabled we assume all html/css is present for an optimal glare effect.\n    if (!this.glarePrerender) {\n      // Create glare element\n      var jsTiltGlare = document.createElement(\"div\");\n      jsTiltGlare.classList.add(\"js-tilt-glare\");\n\n      var jsTiltGlareInner = document.createElement(\"div\");\n      jsTiltGlareInner.classList.add(\"js-tilt-glare-inner\");\n\n      jsTiltGlare.appendChild(jsTiltGlareInner);\n      this.element.appendChild(jsTiltGlare);\n    }\n\n    this.glareElementWrapper = this.element.querySelector(\".js-tilt-glare\");\n    this.glareElement = this.element.querySelector(\".js-tilt-glare-inner\");\n\n    if (this.glarePrerender) {\n      return;\n    }\n\n    Object.assign(this.glareElementWrapper.style, {\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"overflow\": \"hidden\",\n      \"pointer-events\": \"none\",\n      \"border-radius\": \"inherit\"\n    });\n\n    Object.assign(this.glareElement.style, {\n      \"position\": \"absolute\",\n      \"top\": \"50%\",\n      \"left\": \"50%\",\n      \"pointer-events\": \"none\",\n      \"background-image\": \"linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)\",\n      \"transform\": \"rotate(180deg) translate(-50%, -50%)\",\n      \"transform-origin\": \"0% 0%\",\n      \"opacity\": \"0\"\n    });\n\n    this.updateGlareSize();\n  };\n\n  VanillaTilt.prototype.updateGlareSize = function updateGlareSize() {\n    if (this.glare) {\n      var glareSize = (this.element.offsetWidth > this.element.offsetHeight ? this.element.offsetWidth : this.element.offsetHeight) * 2;\n\n      Object.assign(this.glareElement.style, {\n        \"width\": glareSize + \"px\",\n        \"height\": glareSize + \"px\"\n      });\n    }\n  };\n\n  VanillaTilt.prototype.updateClientSize = function updateClientSize() {\n    this.clientWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n\n    this.clientHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n  };\n\n  VanillaTilt.prototype.onWindowResize = function onWindowResize() {\n    this.updateGlareSize();\n    this.updateClientSize();\n  };\n\n  VanillaTilt.prototype.setTransition = function setTransition() {\n    var _this = this;\n\n    clearTimeout(this.transitionTimeout);\n    this.element.style.transition = this.settings.speed + \"ms \" + this.settings.easing;\n    if (this.glare) this.glareElement.style.transition = \"opacity \" + this.settings.speed + \"ms \" + this.settings.easing;\n\n    this.transitionTimeout = setTimeout(function () {\n      _this.element.style.transition = \"\";\n      if (_this.glare) {\n        _this.glareElement.style.transition = \"\";\n      }\n    }, this.settings.speed);\n  };\n\n  /**\r\n   * Method return patched settings of instance\r\n   * @param {boolean} settings.reverse - reverse the tilt direction\r\n   * @param {number} settings.max - max tilt rotation (degrees)\r\n   * @param {startX} settings.startX - the starting tilt on the X axis, in degrees. Default: 0\r\n   * @param {startY} settings.startY - the starting tilt on the Y axis, in degrees. Default: 0\r\n   * @param {number} settings.perspective - Transform perspective, the lower the more extreme the tilt gets\r\n   * @param {string} settings.easing - Easing on enter/exit\r\n   * @param {number} settings.scale - 2 = 200%, 1.5 = 150%, etc..\r\n   * @param {number} settings.speed - Speed of the enter/exit transition\r\n   * @param {boolean} settings.transition - Set a transition on enter/exit\r\n   * @param {string|null} settings.axis - What axis should be enabled. Can be \"x\" or \"y\"\r\n   * @param {boolean} settings.glare - if it should have a \"glare\" effect\r\n   * @param {number} settings.max-glare - the maximum \"glare\" opacity (1 = 100%, 0.5 = 50%)\r\n   * @param {boolean} settings.glare-prerender - false = VanillaTilt creates the glare elements for you, otherwise\r\n   * @param {boolean} settings.full-page-listening - If true, parallax effect will listen to mouse move events on the whole document, not only the selected element\r\n   * @param {string|object} settings.mouse-event-element - String selector or link to HTML-element what will be listen mouse events\r\n   * @param {boolean} settings.reset - false = If the tilt effect has to be reset on exit\r\n   * @param {boolean} settings.reset-to-start - true = On reset event (mouse leave) will return to initial start angle (if startX or startY is set)\r\n   * @param {gyroscope} settings.gyroscope - Enable tilting by deviceorientation events\r\n   * @param {gyroscopeSensitivity} settings.gyroscopeSensitivity - Between 0 and 1 - The angle at which max tilt position is reached. 1 = 90deg, 0.5 = 45deg, etc..\r\n   * @param {gyroscopeSamples} settings.gyroscopeSamples - How many gyroscope moves to decide the starting position.\r\n   */\n\n\n  VanillaTilt.prototype.extendSettings = function extendSettings(settings) {\n    var defaultSettings = {\n      reverse: false,\n      max: 15,\n      startX: 0,\n      startY: 0,\n      perspective: 1000,\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\n      scale: 1,\n      speed: 300,\n      transition: true,\n      axis: null,\n      glare: false,\n      \"max-glare\": 1,\n      \"glare-prerender\": false,\n      \"full-page-listening\": false,\n      \"mouse-event-element\": null,\n      reset: true,\n      \"reset-to-start\": true,\n      gyroscope: true,\n      gyroscopeMinAngleX: -45,\n      gyroscopeMaxAngleX: 45,\n      gyroscopeMinAngleY: -45,\n      gyroscopeMaxAngleY: 45,\n      gyroscopeSamples: 10\n    };\n\n    var newSettings = {};\n    for (var property in defaultSettings) {\n      if (property in settings) {\n        newSettings[property] = settings[property];\n      } else if (this.element.hasAttribute(\"data-tilt-\" + property)) {\n        var attribute = this.element.getAttribute(\"data-tilt-\" + property);\n        try {\n          newSettings[property] = JSON.parse(attribute);\n        } catch (e) {\n          newSettings[property] = attribute;\n        }\n      } else {\n        newSettings[property] = defaultSettings[property];\n      }\n    }\n\n    return newSettings;\n  };\n\n  VanillaTilt.init = function init(elements, settings) {\n    if (elements instanceof Node) {\n      elements = [elements];\n    }\n\n    if (elements instanceof NodeList) {\n      elements = [].slice.call(elements);\n    }\n\n    if (!(elements instanceof Array)) {\n      return;\n    }\n\n    elements.forEach(function (element) {\n      if (!(\"vanillaTilt\" in element)) {\n        element.vanillaTilt = new VanillaTilt(element, settings);\n      }\n    });\n  };\n\n  return VanillaTilt;\n}();\n\nif (typeof document !== \"undefined\") {\n  /* expose the class to window */\n  window.VanillaTilt = VanillaTilt;\n\n  /**\r\n   * Auto load\r\n   */\n  VanillaTilt.init(document.querySelectorAll(\"[data-tilt]\"));\n}\n\nmodule.exports = VanillaTilt;\n","import VanillaTilt from \"vanilla-tilt\";\r\n\r\nexport default function initTiltAnimation() {\r\n  const elements = document.querySelectorAll(\".js-tilt\");\r\n  VanillaTilt.init(elements);\r\n}\r\n","export const defaultProps = {\r\n  easing: \"cubic-bezier(0.5, 0, 0, 1)\",\r\n  distance: \"30px\",\r\n  duration: 1000,\r\n  desktop: true,\r\n  mobile: true,\r\n};\r\n\r\nexport const targetElements = [\r\n  {\r\n    element: \".section-title\",\r\n    animation: {\r\n      delay: 300,\r\n      distance: \"0px\",\r\n      origin: \"bottom\",\r\n    },\r\n  },\r\n  {\r\n    element: \".hero-title\",\r\n    animation: {\r\n      delay: 500,\r\n      origin: window.innerWidth > 768 ? \"left\" : \"bottom\",\r\n    },\r\n  },\r\n  {\r\n    element: \".hero-cta\",\r\n    animation: {\r\n      delay: 1000,\r\n      origin: window.innerWidth > 768 ? \"left\" : \"bottom\",\r\n    },\r\n  },\r\n  {\r\n    element: \".about-wrapper__image\",\r\n    animation: {\r\n      delay: 600,\r\n      origin: \"bottom\",\r\n    },\r\n  },\r\n  {\r\n    element: \".about-wrapper__info\",\r\n    animation: {\r\n      delay: 1000,\r\n      origin: window.innerWidth > 768 ? \"left\" : \"bottom\",\r\n    },\r\n  },\r\n  {\r\n    element: \".project-wrapper__text\",\r\n    animation: {\r\n      delay: 500,\r\n      origin: window.innerWidth > 768 ? \"left\" : \"bottom\",\r\n    },\r\n  },\r\n  {\r\n    element: \".project-wrapper__image\",\r\n    animation: {\r\n      delay: 1000,\r\n      origin: window.innerWidth > 768 ? \"right\" : \"bottom\",\r\n    },\r\n  },\r\n  {\r\n    element: \".contact-wrapper\",\r\n    animation: {\r\n      delay: 800,\r\n      origin: \"bottom\",\r\n    },\r\n  },\r\n];\r\n","import initScrollReveal from \"./scripts/scrollReveal\";\r\nimport initTiltEffect from \"./scripts/tiltAnimation\";\r\nimport { targetElements, defaultProps } from \"./data/scrollRevealConfig\";\r\n\r\ninitScrollReveal(targetElements, defaultProps);\r\ninitTiltEffect();\r\n"]}